#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

bool compare(const vector<double>& a, const vector<double>& b) {
    return a[2] > b[2];
}

double knapSack(vector<vector<double>>& items, int sackWt) {
    double totalProfit = 0.0;
    sort(items.begin(), items.end(), compare);
    for (const auto& item : items) {
        double profit = item[0];
        double weight = item[1];
        if (sackWt >= weight) {
            totalProfit += profit;
            sackWt -= weight;
        } else {
            totalProfit += profit * (sackWt / weight);
            break;
        }
    }
    return totalProfit;
}

int main() {
    vector<vector<double>> items;
    int n, sackWt;
    cout << "Number of objects: ";
    cin >> n;
    cout << "Enter sack weight: ";
    cin >> sackWt;
    for (int i = 0; i < n; ++i) {
        double profit, weight;
        cout << "Enter profit and weight: ";
        cin >> profit >> weight;
        double ratio = profit / weight;
        items.push_back({profit, weight, ratio});
    }
    cout << "Total profit is: " << knapSack(items, sackWt) << endl;
    return 0;
}
